{"version":3,"sources":["utils/constants.ts","utils/database.ts","utils/style.ts","components/Util/RenderedText.tsx","components/DBPreview.tsx","components/ErrorView.tsx","components/Util/Modal.tsx","components/Footer.tsx","components/Util/Button.tsx","static/logo.webp","components/Header.tsx","components/Util/GeneralPurposeCollapsible.tsx","components/InfoView/ExtendedCorrection/ExtendedCorrection.tsx","components/InfoView/InfoEnd.tsx","components/InfoView/InfoStart.tsx","components/InfoView/InfoView.tsx","components/QuestionsForm/AnswerForm.tsx","components/QuestionsForm/BottomControls.tsx","components/QuestionsForm/QuestionHeader.tsx","components/Util/CollapsibleText.tsx","components/QuestionsForm/QuestionView.tsx","components/QuestionsForm/RecapBar.tsx","components/QuestionsForm/SectionRecap.tsx","components/QuestionsForm/SectionStart.tsx","components/QuestionsForm/Timer.tsx","components/QuestionsForm/TopControls.tsx","components/QuestionsForm/QuestionsForm.tsx","components/Util/Separator.tsx","components/App.tsx","index.tsx"],"names":["sectionInfo","ing","name","order","sample","minutes","coeff","Fraction","mat","com","sub","fis","correctionWeight","getSectionName","key","sheetDict","quesiti_ING","quesiti_MAT","quesiti_COM","quesiti_FIS","a","axios","get","data","db","meta","version","packageJson","Error","getImageURL","fileName","theme","baseStyle","fontFamily","color","createStyle","styles","filter","f","reduce","acc","curr","formatNumber","num","addDecimals","parseFloat","round","toString","toLocaleString","minimumFractionDigits","maximumFractionDigits","replace","RenderedText","text","DBPreview","Object","entries","map","questions","style","q","validated","answers","b","c","d","e","id","ErrorView","hidden","display","internal","boxStyle","position","top","left","transform","bgcolor","border","boxShadow","borderRadius","p","Modal","props","openState","open","setOpen","onClose","closeAfterTransition","BackdropComponent","MUIBackdrop","BackdropProps","timeout","in","sx","children","containerStyle","justifyContent","margin","gap","fontSize","linkStyle","textDecoration","textStyle","Footer","state","aboutModalState","useState","licenseModalState","privacyModalState","href","target","rel","onClick","License","Privacy","alt","borderWidth","marginLeft","marginRight","src","property","buttonStyle","alignItems","pStyle","marginBlock","iconStyle","leftIcon","float","rightIcon","Button","label","divStyle","height","flex","centeredText","logoLinkStyle","logoStyle","buttonDivStyle","Header","viewState","logo","currentView","selectView","outerDivStyle","collapsibleStyle","background","GeneralPurposeCollapsible","startOpen","isOpen","trigger","onOpen","easing","contentStyle","flexDirection","padding","docStyle","printButton","ExtendedCorrection","ref","useRef","documentTitle","Date","content","current","sort","section","values","className","question","trim","letter","find","correct","resultTable","tableDivStyle","alignSelf","tableStyle","borderSpacing","tableCell","paddingInline","textAlign","tableHeader","fontWeight","backgroundColor","centeredTextStyle","InfoEnd","correctionGrid","fromEntries","secQuestions","notGiven","wrong","forEach","answer","total","length","weight","score","div","mul","correction","add","testPassed","compare","tengPassed","index","info","toFraction","centered","InfoStart","startTest","InfoView","view","baseText","AnswerForm","letterState","tmpAnswerState","currentQuestion","RadioRow","undefined","verticalAlign","spanStyle","width","toUpperCase","type","value","checked","onChange","event","controlsDiv","paddingBlock","labelStyle","BottomControls","tmpFlaggedState","flagged","setFlagged","updateAnswer","leftContainer","rightContainer","minWidth","questionStyle","paddingLeft","answerLetterStyle","marginInline","QuestionHeader","questionIndex","currentAnswer","shiftQuestionIndex","innerPStyle","CollapsibleText","longText","split","t","i","collapsibleContentStyle","attachmentStyle","imageStyle","maxHeight","QuestionView","marginBottom","attachments","track","barStyle","RecapBar","active","sectionQuestions","sectionAnswers","AnswerCell","currentQuestionIndexState","selected","cellContainerStyle","flexShrink","alignContent","cellSubStyle","selectedCell","outline","borderBottom","paddingTop","paddingBottom","SectionRecap","Math","floor","secondsUsed","minimumIntegerDigits","max","goToNextSection","SectionStart","startSection","numbersStyle","expiring","maxWidth","wordWrap","Timer","timer","hours","seconds","expired","outerDiv","innerDiv","TopControls","currentSection","closeSection","timerExpired","testingStyle","QuestionsForm","qIndex","originalSetQIndex","tmpTimerExpiredState","alertDisplayedState","sectionState","setSection","setView","answersState","setAnswers","timeRecordState","timeRecord","setTimeRecord","shouldShowAlert","showAlert","alert","setQIndex","nextAnswers","nextTR","restart","ignoreAlert","next","shiftQIndex","offset","useTimer","expiryTimestamp","getTimerExpDate","autoStart","onExpire","start","nextSection","sortedInfo","findIndex","getNextSection","res","setSeconds","getSeconds","Separator","App","database","loadDatabase","setQuestions","loadingError","showError","useEffect","readDatabase","then","includes","validQuestions","resIds","_","shuffle","uniq","v","slice","selectRandomQuestions","catch","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4734e080.chunk.js","sourcesContent":["import { section } from './database'\nimport Fraction from 'fraction.js'\n\ninterface sectionInfoElement {\n  /** The readable name of the section */\n  name: string\n  /** The order in which the section should be tested */\n  order: number\n  /** The number of questions that should be selected */\n  sample: number\n  /** The number of sub-questions that should be selected (only applies to 'com') */\n  sub?: number\n  /** The maximum number of minutes that the user can use to complete a section */\n  minutes: number\n  /** The weight that this section's score has on the total score ({@link testTotalScore}) */\n  coeff: number | Fraction\n}\n\nexport const sectionInfo: Record<section, sectionInfoElement> = {\n  ing: {\n    name: 'Inglese',\n    order: 1,\n    sample: 30,\n    minutes: 15,\n    coeff: new Fraction('1/3')\n  },\n  mat: {\n    name: 'Matematica',\n    order: 2,\n    sample: 25,\n    minutes: 75,\n    coeff: 2.6\n  },\n  com: {\n    name: 'Comprensione verbale',\n    order: 3,\n    sample: 1,\n    sub: 5,\n    minutes: 10,\n    coeff: 3\n  },\n  fis: {\n    name: 'Fisica',\n    order: 4,\n    sample: 5,\n    minutes: 10,\n    coeff: 2\n  }\n}\n\nexport const testTotalScore = 100\n/** Minimum score to pass the test */\nexport const testPassThreshold = 60\n/** Minimum number of correct questions to pass the test */\nexport const tengPassThreshold = 24\n/** How to weight answer when calculating the section score */\nexport const correctionWeight = {\n  correct: 1,\n  wrong: -0.25,\n  notGiven: 0\n}\n\nexport function getSectionName(key: section) {\n  return sectionInfo[key].name\n}\n\nexport function getNextSection(currentSection: section): section | undefined {\n  const sortedInfo = Object.entries(sectionInfo).sort(\n    (a, b) => a[1].order - b[1].order\n  ) as [section, sectionInfoElement][]\n  const i = sortedInfo.findIndex((e) => e[0] == currentSection)\n  return (sortedInfo[i + 1] || [])[0]\n}\n","import axios from 'axios'\nimport _ from 'underscore'\nimport packageJson from '../../package.json'\nimport { sectionInfo } from './constants'\n\nexport const sheetDict = {\n  quesiti_ING: 'ing',\n  quesiti_MAT: 'mat',\n  quesiti_COM: 'com',\n  quesiti_FIS: 'fis'\n} as const\nexport type section = typeof sheetDict[keyof typeof sheetDict]\n\nexport type answerLetter = 'a' | 'b' | 'c' | 'd' | 'e'\n\nexport interface Question {\n  id: string\n  text: string\n  answers: Record<answerLetter, string>\n  correct: answerLetter\n  attachments: string[]\n  validated: boolean\n\n  // These are only present for COM questions\n  sub?: string\n  track?: string\n}\n\nexport type QuestionsData = Record<section, Question[]>\n\nexport interface Database extends QuestionsData {\n  meta: {\n    version: string\n  }\n}\n\nexport async function readDatabase() {\n  const db = (\n    await axios.get(\n      'https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/main/database.json'\n    )\n  )?.data as Database\n\n  if (db?.meta?.version != packageJson.version)\n    throw new Error(\n      `Database version doesn't match application.\\nDatabase: ${db?.meta?.version}\\nApp: ${packageJson.version}`\n    )\n\n  return db\n}\n\nexport function selectRandomQuestions(db: Database): QuestionsData {\n  return Object.fromEntries(\n    // Manipulate db entries\n    (Object.entries(db) as [section /* or \"meta\" */, Question[]][])\n      // Select only entries associated with a section <=> exclude \"meta\"\n      .filter(([key]) => (Object.values(sheetDict) as string[]).includes(key))\n      .map(([key, questions]) => {\n        // Select only validated questions\n        const validQuestions = questions.filter((q) => q.validated)\n\n        // Get the question ids, remove duplicates, shuffle them, and select the appropriate number of questions.\n        const resIds = _.shuffle(_.uniq(validQuestions.map((v) => v.id))).slice(\n          0,\n          sectionInfo[key].sample\n        )\n\n        // Return only the questions with a selected ID\n        return [\n          key,\n          _.shuffle(validQuestions.filter((q) => resIds.includes(q.id)))\n        ]\n      })\n  ) as QuestionsData\n}\n\nexport function getImageURL(fileName: string) {\n  return `https://raw.githubusercontent.com/PoliNetworkOrg/TheTOLProjectData/main/img/${fileName}`\n}\n","import * as CSS from 'csstype'\nimport Fraction from 'fraction.js'\n\nexport type cssLike = CSS.Properties\n\nexport const theme = {\n  boxShadow:\n    '1px 0 0 0 #606060, 0 1px 0 0 #606060, 1px 1px 0 0 #606060, /* corner */ 1px 0 0 0 #606060 inset, 0 1px 0 0 #606060 inset',\n  lightBackground: '#F3F3EE',\n  lightBorder: '#D5DFE4',\n  primary: '#069',\n  questionYellow: 'yellow',\n  questionGreen: '#00D700',\n  softBlack: '#333',\n  timerGreen: '#009527',\n  timerRed: 'red'\n}\n\nconst baseStyle: CSS.Properties = {\n  fontFamily: 'Verdana, Roboto',\n  color: theme.softBlack\n}\n\nexport function createStyle(...styles: (CSS.Properties | undefined)[]) {\n  return {\n    ...baseStyle,\n    ...styles.filter((f) => f).reduce((acc, curr) => ({ ...acc, ...curr }), {})\n  }\n}\n\nexport function formatNumber(num: number | Fraction, addDecimals = false) {\n  return (\n    typeof num == 'number'\n      ? num\n      : parseFloat(num.round(addDecimals ? 2 : 0).toString())\n  )\n    .toLocaleString('it-IT', {\n      minimumFractionDigits: addDecimals ? 2 : 0,\n      maximumFractionDigits: 2\n    })\n    .replace(/\\./g, ',')\n}\n","import React from 'react'\nimport Latex from 'react-latex'\n\ninterface RenderedTextProps {\n  text: string\n}\nexport default function RenderedText({ text }: RenderedTextProps) {\n  return <Latex>{text}</Latex>\n}\n","import React from 'react'\nimport { section, Database, Question } from '../utils/database'\nimport { createStyle } from '../utils/style'\n\nimport RenderedText from './Util/RenderedText'\n\ninterface DBPreviewProps {\n  db: Database\n}\n\nconst baseStyle = createStyle()\n\nexport default function DBPreview({ db }: DBPreviewProps) {\n  return (\n    <div>\n      {(\n        Object.entries(db).filter(([key]) => key != 'meta') as [\n          section,\n          Question[]\n        ][]\n      ).map(([key, questions]) => (\n        <div key={key} style={baseStyle}>\n          <h3>Section: {key}</h3>\n          <ul>\n            {questions\n              .filter((q) => q.text || key == 'com')\n              .map((q) => (\n                <div key={key + q.id + (q.sub || '')}>\n                  <RenderedText text={q.text} />\n                  <br />\n                  <p>Valid: {q.validated + ''}</p>\n                  <br />\n                  <RenderedText text={q.answers.a} />\n                  <br />\n                  <RenderedText text={q.answers.b} />\n                  <br />\n                  <RenderedText text={q.answers.c} />\n                  <br />\n                  <RenderedText text={q.answers.d} />\n                  <br />\n                  <RenderedText text={q.answers.e} />\n                  <br />\n                  <br />\n                  <br />\n                </div>\n              ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\n\ninterface ErrorViewProps {\n  hidden: boolean\n  display: string\n  internal?: Error\n}\n\nexport default function ErrorView({\n  hidden,\n  display,\n  internal\n}: ErrorViewProps) {\n  return (\n    <div hidden={hidden}>\n      <h3>{display}</h3>\n      <blockquote>{internal + ''}</blockquote>\n    </div>\n  )\n}\n","import React from 'react'\nimport { statePair } from '../../utils/types'\nimport MUIModal from '@mui/material/Modal'\nimport MUIFade from '@mui/material/Fade'\nimport MUIBox from '@mui/material/Box'\nimport MUIBackdrop from '@mui/material/Backdrop'\nimport { SxProps } from '@mui/system'\n\nconst boxStyle: SxProps = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  borderRadius: 2,\n  p: 4\n}\n\ninterface ModalProps {\n  openState: statePair<boolean>\n  children?: React.ReactNode\n}\nexport default function Modal(props: ModalProps) {\n  const [open, setOpen] = props.openState\n\n  const handleClose = () => setOpen(false)\n\n  return (\n    <MUIModal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={open}\n      onClose={handleClose}\n      closeAfterTransition\n      BackdropComponent={MUIBackdrop}\n      BackdropProps={{\n        timeout: 500\n      }}\n    >\n      <MUIFade in={open}>\n        <MUIBox sx={boxStyle}>{props.children}</MUIBox>\n      </MUIFade>\n    </MUIModal>\n  )\n}\n","import React, { useState } from 'react'\nimport { createStyle, theme } from '../utils/style'\nimport { statePair } from '../utils/types'\nimport Modal from './Util/Modal'\n\nconst containerStyle = createStyle({\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '15px',\n  gap: '50px',\n  fontSize: '10pt',\n  color: theme.softBlack\n})\n\nconst linkStyle = createStyle({\n  color: 'inherit',\n  textDecoration: 'none'\n})\n\nconst textStyle = createStyle()\n\nexport default function Footer() {\n  const aboutModalState = useState(false),\n    licenseModalState = useState(false),\n    privacyModalState = useState(false)\n\n  return (\n    <div style={containerStyle}>\n      <a\n        href=\"https://github.com/PoliNetworkOrg/TheTOLProject/\"\n        style={linkStyle}\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n      >\n        Source\n      </a>\n      <a href=\"#\" style={linkStyle} onClick={() => aboutModalState[1](true)}>\n        About\n      </a>\n      <a href=\"#\" style={linkStyle} onClick={() => licenseModalState[1](true)}>\n        License\n      </a>\n      <a href=\"#\" style={linkStyle} onClick={() => privacyModalState[1](true)}>\n        Privacy\n      </a>\n      {About(aboutModalState)}\n      {License(licenseModalState)}\n      {Privacy(privacyModalState)}\n    </div>\n  )\n}\n\nfunction About(state: statePair<boolean>) {\n  return (\n    <Modal openState={state}>\n      <p style={textStyle}>This a paragraph about the project.</p>\n    </Modal>\n  )\n}\n\nfunction License(state: statePair<boolean>) {\n  return (\n    <Modal openState={state}>\n      <div style={textStyle}>\n        <a\n          rel=\"license noreferrer noopener\"\n          href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\n          target=\"_blank\"\n        >\n          <img\n            alt=\"Creative Commons License\"\n            style={{\n              borderWidth: 0,\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              display: 'block'\n            }}\n            src=\"https://i.creativecommons.org/l/by-sa/4.0/88x31.png\"\n          />\n        </a>\n        <br />\n        <span\n          {...{ 'xmlns:dct': 'http://purl.org/dc/terms/' }}\n          property=\"dct:title\"\n        >\n          TheTOLProject\n        </span>{' '}\n        by{' '}\n        <a\n          {...{ 'xmlns:cc': 'http://creativecommons.org/ns#' }}\n          href=\"https://polinetwork.github.io/it/projects/\"\n          property=\"cc:attributionName\"\n          rel=\"cc:attributionURL noreferrer noopener\"\n          target=\"_blank\"\n        >\n          PoliNetwork\n        </a>{' '}\n        is licensed under a{' '}\n        <a\n          rel=\"license noreferrer noopener\"\n          href=\"http://creativecommons.org/licenses/by-sa/4.0/\"\n          target=\"_blank\"\n        >\n          Creative Commons Attribution-ShareAlike 4.0 International License\n        </a>\n        .<br />\n        <br />\n        Permissions beyond the scope of this license may be available at{' '}\n        <a\n          {...{ 'xmlns:cc': 'http://creativecommons.org/ns#' }}\n          href=\"https://github.com/PoliNetworkOrg/TheTOLProject/blob/main/LICENSE\"\n          rel=\"cc:morePermissions noreferrer noopener\"\n          target=\"_blank\"\n        >\n          https://github.com/PoliNetworkOrg/TheTOLProject/blob/main/LICENSE\n        </a>\n      </div>\n    </Modal>\n  )\n}\n\nfunction Privacy(state: statePair<boolean>) {\n  return (\n    <Modal openState={state}>\n      <p style={textStyle}>\n        Questo sito utilizza un tracker non invasivo per tener traccia della sua\n        performance, nel rispetto delle norme GDPR. Il sito non salva nessun\n        cookie permanente: ogni dato trasmesso è in forma anonima e non\n        riconducibile all'utente. Per maggiori informazioni, visita la pagina{' '}\n        <a\n          href=\"https://panelbear.com/cookie-free-analytics/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          \"Cookie Free Website Analytics\" di PanelBear\n        </a>\n        .\n        <br />\n        <br />\n        This website uses a non-invasive tracker to keep track of its\n        performance, complying with GDPR. The website does not store any\n        permanent cookie: transmitted data is anonymized and not traceable to\n        the user. For more info, check out{' '}\n        <a\n          href=\"https://panelbear.com/cookie-free-analytics/\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          PanelBear's \"Cookie Free Website Analytics\"\n        </a>{' '}\n        web page.\n      </p>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { createStyle, cssLike } from '../../utils/style'\n\nconst buttonStyle = createStyle({\n  display: 'flex',\n  fontFamily: ' Arial',\n  fontSize: '9.5pt',\n  alignItems: 'center'\n})\n\nconst pStyle = createStyle({\n  display: 'inline-block',\n  marginBlock: 0,\n  margin: 0,\n  fontFamily: 'Arial'\n})\n\nconst iconStyle = createStyle({\n  display: 'flex'\n})\nconst leftIcon = createStyle(iconStyle, {\n  float: 'left',\n  marginRight: '2px'\n})\nconst rightIcon = createStyle(iconStyle, {\n  float: 'right',\n  marginLeft: '2px'\n})\n\ninterface ButtonProps {\n  label: string\n  onClick?: () => void\n  style?: cssLike\n  leftIcon?: () => JSX.Element\n  rightIcon?: () => JSX.Element\n}\n\nexport default function Button(props: ButtonProps) {\n  return (\n    <button\n      style={createStyle(buttonStyle, props.style || {})}\n      onClick={props.onClick}\n    >\n      <span style={leftIcon}>{props.leftIcon && props.leftIcon()}</span>\n      <p style={pStyle}>{props.label}</p>\n      <span style={rightIcon}>{props.rightIcon && props.rightIcon()}</span>\n    </button>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/logo.34b8e2e9.webp\";","import React from 'react'\nimport { createStyle } from '../utils/style'\nimport { statePair } from '../utils/types'\nimport { view } from './App'\nimport Button from './Util/Button'\nimport logo from '../static/logo.webp'\n\nconst divStyle = createStyle({\n  height: '70px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n})\n\nconst textStyle = createStyle({\n  flex: 1,\n  fontSize: '18pt',\n  display: 'inline-block'\n})\n\nconst centeredText = createStyle(textStyle, {\n  display: 'flex',\n  justifyContent: 'center'\n})\n\nconst logoLinkStyle = createStyle({\n  flex: 1,\n  display: 'flex',\n  alignItems: 'center',\n  gap: '10px',\n  margin: '5px',\n  textDecoration: 'none'\n})\n\nconst logoStyle = createStyle({\n  height: '60px'\n})\n\nconst buttonDivStyle = createStyle({\n  display: 'flex',\n  flex: 1,\n  justifyContent: 'flex-end'\n})\n\ninterface HeaderProps {\n  viewState: statePair<view>\n}\n\nexport default function Header({ viewState }: HeaderProps) {\n  return (\n    <div style={divStyle}>\n      <a\n        style={logoLinkStyle}\n        href=\"https://polinetwork.github.io\"\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n      >\n        <img src={logo} alt=\"logo\" style={logoStyle} />\n        <h1 style={textStyle}>PoliNetwork</h1>\n      </a>\n      <h1 style={centeredText}>The TOL Project</h1>\n      <div style={buttonDivStyle}>\n        <Button\n          label=\"Toggle database view\"\n          onClick={() => {\n            const [currentView, selectView] = viewState\n            if (currentView == 'dbPreview') selectView('INFO-start')\n            else selectView('dbPreview')\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { ReactNode, useState } from 'react'\nimport Collapsible from 'react-collapsible'\nimport { createStyle, cssLike, theme } from '../../utils/style'\nimport Button from './Button'\n\nconst outerDivStyle = createStyle({\n  margin: '10px'\n})\n\nconst collapsibleStyle = createStyle({\n  background: theme.lightBackground,\n  margin: '5px'\n})\n\ninterface GeneralPurposeCollapsibleProps {\n  label: string\n  children: ReactNode\n  startOpen?: boolean\n  contentStyle?: cssLike\n  outerDivStyle?: cssLike\n  onOpen?: () => void\n  onClose?: () => void\n}\nexport default function GeneralPurposeCollapsible(\n  props: GeneralPurposeCollapsibleProps\n) {\n  const [isOpen, setOpen] = useState(props.startOpen ?? true)\n\n  return (\n    <div style={createStyle(outerDivStyle, props.outerDivStyle)}>\n      <Collapsible\n        trigger={\n          <Button label={props.label} onClick={() => setOpen(!isOpen)} />\n        }\n        open={isOpen}\n        onOpen={props.onOpen}\n        onClose={props.onClose}\n        easing=\"ease-in-out\"\n      >\n        <div style={createStyle(collapsibleStyle, props.contentStyle)}>\n          {props.children}\n        </div>\n      </Collapsible>\n    </div>\n  )\n}\n","import React, { ReactNode, useRef } from 'react'\nimport ReactToPrint from 'react-to-print'\nimport { Question, QuestionsData, section } from '../../../utils/database'\nimport { AnswersData } from '../../App'\nimport { sectionInfo } from '../../../utils/constants'\nimport { createStyle } from '../../../utils/style'\nimport RenderedText from '../../Util/RenderedText'\nimport GeneralPurposeCollapsible from '../../Util/GeneralPurposeCollapsible'\nimport Button from '../../Util/Button'\nimport './ExtendedCorrection.css'\n\nconst collapsibleStyle = createStyle({\n  display: 'flex',\n  flexDirection: 'column',\n  padding: '15px',\n  gap: '10px'\n})\n\nconst docStyle = createStyle()\n\nconst printButton = createStyle({\n  display: 'flex',\n  justifyContent: 'center'\n})\n\ninterface ExtendedCorrectionProps {\n  answers: AnswersData\n  questions: QuestionsData\n  resultTable: ReactNode\n}\n\nexport default function ExtendedCorrection(props: ExtendedCorrectionProps) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const ref = useRef<any>()\n\n  return (\n    <GeneralPurposeCollapsible label=\"Correzione estesa\" startOpen={false}>\n      <div style={collapsibleStyle}>\n        <ReactToPrint\n          documentTitle={`TheTOLProject ${new Date().toLocaleString()}`}\n          content={() => ref.current}\n          trigger={() => (\n            <div style={printButton}>\n              <Button label=\"Stampa/salva correzione\" />\n            </div>\n          )}\n        />\n        <div ref={ref} style={docStyle}>\n          <div>\n            {(Object.entries(props.questions) as [section, Question[]][])\n              .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n              .map(([section, values]) => (\n                <div key={section}>\n                  <div className=\"page-break\" />\n                  <div>\n                    <b>{sectionInfo[section].name}</b>\n                    <ol>\n                      {values.map((question) => (\n                        <div key={question.id + (question.sub || 0)}>\n                          <li>\n                            <RenderedText\n                              text={`\n                            ${question.text} [${question.id}${\n                                question.sub ? '-' + question.sub : ''\n                              }]\n                            `.trim()}\n                            />{' '}\n                            <u>\n                              {(() => {\n                                const letter = props.answers[section].find(\n                                  (a) =>\n                                    a?.id == question.id &&\n                                    a?.sub == question.sub\n                                )?.letter\n\n                                return letter\n                                  ? letter == question.correct\n                                    ? 'Esatta'\n                                    : 'Errata'\n                                  : 'Senza risposta'\n                              })()}\n                            </u>\n                          </li>\n                        </div>\n                      ))}\n                    </ol>\n                  </div>\n                </div>\n              ))}{' '}\n            <div className=\"page-break\" />\n            <div>\n              {props.resultTable}\n              <br />\n              Hai delle domande sui quesiti e la loro risoluzione? Falle sul{' '}\n              <a\n                href=\"https://t.me/joinchat/_zugEikozmcyMzA0\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                Gruppo preparazione TOL di PoliNetwork\n              </a>\n              !\n              <br />\n              Per fare riferimento alla domanda manda, assieme al testo, anche\n              l'ID (il numero che trovi fra [] dopo il testo).\n            </div>\n          </div>\n        </div>\n      </div>\n    </GeneralPurposeCollapsible>\n  )\n}\n","import Fraction from 'fraction.js'\nimport React from 'react'\nimport {\n  correctionWeight,\n  getSectionName,\n  sectionInfo,\n  tengPassThreshold,\n  testPassThreshold,\n  testTotalScore\n} from '../../utils/constants'\nimport { Question, QuestionsData, section } from '../../utils/database'\nimport { createStyle, formatNumber, theme } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport ExtendedCorrection from './ExtendedCorrection/ExtendedCorrection'\nimport GeneralPurposeCollapsible from '../Util/GeneralPurposeCollapsible'\n\nconst divStyle = createStyle({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  fontSize: '11pt'\n})\n\nconst tableDivStyle = createStyle({ alignSelf: 'center' })\n\nconst tableStyle = createStyle({ borderSpacing: 0 })\n\nconst tableCell = createStyle({\n  padding: '5px',\n  paddingInline: '10px',\n  textAlign: 'center',\n  border: `thin solid ${theme.lightBorder}`,\n  borderSpacing: '0px',\n  fontSize: '9.5pt'\n})\n\nconst tableHeader = createStyle(tableCell, {\n  fontWeight: 'bold',\n  backgroundColor: theme.lightBackground,\n  textAlign: 'left'\n})\n\nconst centeredTextStyle = createStyle({\n  textAlign: 'center'\n})\n\nconst collapsibleStyle = createStyle({\n  margin: '2px',\n  padding: '10px',\n  textAlign: 'justify'\n})\n\ninterface InfoEndProps {\n  answers: AnswersData\n  questions: QuestionsData\n}\nexport default function InfoEnd(props: InfoEndProps) {\n  const { answers, questions } = props\n\n  const correctionGrid = Object.fromEntries(\n    (Object.entries(questions) as [section, Question[]][]).map(\n      ([section, secQuestions]) => {\n        let correct = 0,\n          notGiven = 0,\n          wrong = 0\n\n        secQuestions.forEach((q) => {\n          const answer = answers[section].find(\n            (a) => a && a.id == q.id && a.sub == q.sub\n          )\n\n          if (!answer || !answer.letter) notGiven++\n          else if (answer.letter == q.correct) correct++\n          else wrong++\n        })\n\n        const total = secQuestions.length,\n          sample = sectionInfo[section].sample,\n          sub = sectionInfo[section].sub || 1,\n          weight = sectionInfo[section].coeff\n\n        return [\n          section,\n          {\n            total,\n            correct,\n            notGiven,\n            wrong,\n            weight,\n            score: new Fraction(\n              correctionWeight.correct * correct +\n                correctionWeight.wrong * wrong +\n                correctionWeight.notGiven * notGiven\n            )\n              .div(total)\n              .mul(sample * sub)\n          }\n        ]\n      }\n    )\n  )\n\n  const score = (\n    Object.entries(correctionGrid) as [section, typeof correctionGrid[string]][]\n  )\n    .map(([, correction]) => correction.score.mul(correction.weight))\n    .reduce((acc, curr) => acc.add(curr), new Fraction(0))\n\n  const testPassed = score.compare(testPassThreshold) >= 0,\n    tengPassed = correctionGrid.ing?.correct >= tengPassThreshold\n\n  const resultTable = () => (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <p style={centeredTextStyle}>\n        <br />\n        Esito:{' '}\n        {testPassed\n          ? `Superato${!tengPassed ? ' (OFA TENG)' : ''}`\n          : `Non superato ${\n              !tengPassed ? '(OFA TEST + OFA TENG)' : '(OFA TEST)'\n            }`}\n        <br />\n        Punteggio calcolato: {formatNumber(score, true)} /{' '}\n        {formatNumber(testTotalScore, true)}\n        <br />\n        Punteggio arrotondato: {formatNumber(score)} /{' '}\n        {formatNumber(testTotalScore)}\n      </p>\n      <br />\n\n      <div style={tableDivStyle}>\n        <table style={tableStyle}>\n          <tr>\n            <td></td>\n            <td style={tableHeader}>Punteggio sezione</td>\n            <td style={tableHeader}>N° quesiti</td>\n            <td style={tableHeader}>Esatti</td>\n            <td style={tableHeader}>Errati</td>\n            <td style={tableHeader}>Senza risposta</td>\n          </tr>\n          {(\n            Object.entries(correctionGrid) as [\n              section,\n              typeof correctionGrid[section]\n            ][]\n          )\n            .sort((a, b) => sectionInfo[a[0]].order - sectionInfo[b[0]].order)\n            .map(([section, correction]) => (\n              <tr key={section}>\n                <td style={tableHeader}>{getSectionName(section)}</td>\n                <td style={tableCell}>\n                  {formatNumber(correction.score, true)}\n                </td>\n                <td style={tableCell}>{correction.total}</td>\n                <td style={tableCell}>{correction.correct}</td>\n                <td style={tableCell}>{correction.wrong}</td>\n                <td style={tableCell}>{correction.notGiven}</td>\n              </tr>\n            ))}\n        </table>\n      </div>\n      <br />\n    </div>\n  )\n\n  return (\n    <div style={divStyle}>\n      {resultTable()}\n\n      <GeneralPurposeCollapsible\n        label=\"Come viene calcolato il punteggio\"\n        startOpen={false}\n      >\n        <p style={collapsibleStyle}>\n          Il <b>punteggio massimo</b> conseguibile{' '}\n          <b>è di {formatNumber(testTotalScore, true)}</b> e viene espresso fino\n          alla seconda cifra decimale.\n          <br />\n          L'attribuzione di <b>OFA TEST</b> (Obblighi Formativi Aggiunti)\n          avviene quando il punteggio test, arrotondato all'intero più vicino,{' '}\n          <b>è minore di {formatNumber(testPassThreshold)}</b>.<br />\n          L'attribuzione di <b>OFA TENG</b> avviene quando, considerando la sola\n          sezione di {sectionInfo.ing.name}, il numero di risposte corrette{' '}\n          <b>è inferiore a {formatNumber(tengPassThreshold)}</b>.\n          <br />\n          <br />\n          Il <b>punteggio</b> della prova viene calcolato attribuendo:\n          <ul>\n            <li>\n              {formatNumber(correctionWeight.correct)} punto ad ogni risposta\n              esatta\n            </li>\n            <li>\n              {formatNumber(correctionWeight.wrong)} punti ad ogni risposta\n              errata\n            </li>\n            <li>\n              {formatNumber(correctionWeight.notGiven)} punti per ogni risposta\n              non data\n            </li>\n          </ul>\n          e assegnando\n          <ul>\n            {Object.entries(sectionInfo).map(([, info], index) => (\n              <li key={index}>\n                peso{' '}\n                {typeof info.coeff == 'number'\n                  ? formatNumber(info.coeff)\n                  : info.coeff.toFraction()}{' '}\n                ad ogni quesito di {info.name}\n              </li>\n            ))}\n          </ul>\n          Il <b>punteggio</b> complessivo viene arrotondato all'intero più\n          vicino (es: il punteggio 59,49 viene arrotondato a 59, il punteggio\n          59,50 a 60)\n        </p>\n      </GeneralPurposeCollapsible>\n\n      <ExtendedCorrection\n        answers={props.answers}\n        questions={props.questions}\n        resultTable={resultTable()}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { createStyle } from '../../utils/style'\nimport Button from '../Util/Button'\n\nconst divStyle = createStyle({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  margin: '10px'\n})\n\nconst centered = createStyle({\n  textAlign: 'center',\n  display: 'block'\n})\n\ninterface InfoStartProps {\n  startTest: () => void\n}\nexport default function InfoStart(props: InfoStartProps) {\n  return (\n    <div style={divStyle}>\n      <p>Paragrafo sullo scopo del progetto etc. etc.</p>\n      <p>\n        <span style={centered}>DISCLAIMER</span>\n        \"The TOL Project\" (Progetto) non è in alcun modo collegato al\n        Politecnico di Milano ma è gestito gratuitamente da studenti. Gli autori\n        del Progetto non si assumono alcuna responsabilità, né garantiscono\n        espressamente o implicitamente l'accuratezza o l'affidabilità dei\n        contenuti di questo sito ai fini del superamento del test di ammissione\n        del Politecnico di Milano.\n        <span style={centered}>---</span>\n        \"The TOL Project\" (Project) is in no way connected to Politecnico di\n        Milano but is managed free of charge by students. The authors of the\n        Project do not assume any responsibility, nor do they expressly or\n        implicitly guarantee the accuracy or reliability of the contents of this\n        site for the purpose of passing the admission test at Politecnico di\n        Milano.\n      </p>\n      <div>\n        <Button label=\"Inizia il test\" onClick={props.startTest} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { QuestionsData } from '../../utils/database'\nimport { statePair } from '../../utils/types'\nimport { AnswersData, view } from '../App'\nimport InfoEnd from './InfoEnd'\nimport InfoStart from './InfoStart'\n\ninterface InfoViewProps {\n  answers: AnswersData\n  questions: QuestionsData\n  viewState: statePair<view>\n}\nexport default function InfoView(props: InfoViewProps) {\n  const view = props.viewState[0]\n\n  return view == 'INFO-start' ? (\n    <InfoStart\n      startTest={() => {\n        props.viewState[1]('TOL-startSec')\n      }}\n    />\n  ) : view == 'INFO-end' ? (\n    <InfoEnd answers={props.answers} questions={props.questions} />\n  ) : (\n    <div />\n  )\n}\n","import React from 'react'\nimport { Question } from '../../utils/database'\nimport { createStyle } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport RenderedText from '../Util/RenderedText'\n\nconst baseText = createStyle({\n  fontSize: '11pt'\n})\n\ninterface AnswerFormProps {\n  currentAnswer: Answer | undefined\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n}\n\nexport default function AnswerForm(props: AnswerFormProps) {\n  const letterState = props.tmpAnswerState\n\n  if (!props.currentQuestion)\n    return (\n      <span style={baseText}>\n        <br />\n        No answers to display ¯\\_(ツ)_/¯\n      </span>\n    )\n\n  return (\n    <div>\n      <RadioRow\n        letter=\"a\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.a}\n      />\n      <RadioRow\n        letter=\"b\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.b}\n      />\n      <RadioRow\n        letter=\"c\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.c}\n      />\n      <RadioRow\n        letter=\"d\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.d}\n      />\n      <RadioRow\n        letter=\"e\"\n        letterState={letterState}\n        text={props.currentQuestion.answers.e}\n      />\n      <RadioRow letter={undefined} letterState={letterState} text=\"Non so\" />\n    </div>\n  )\n}\n\ninterface RadioRowProps {\n  letter: Answer['letter']\n  letterState: statePair<Answer['letter']>\n  text: string\n}\nfunction RadioRow(props: RadioRowProps) {\n  const textStyle = createStyle({\n    fontWeight: 'bold',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    paddingInline: '10px'\n  })\n  const spanStyle = createStyle({\n    width: '2em',\n    float: 'left',\n    display: 'inline-block'\n  })\n\n  return (\n    <tr style={baseText}>\n      <label>\n        <td style={textStyle}>\n          <span style={spanStyle}>{props.letter?.toUpperCase() || '?'} </span>\n          <input\n            type=\"radio\"\n            value={props.letter}\n            checked={props.letter == props.letterState[0]}\n            onChange={(event) => {\n              // @ts-expect-error The value is correct\n              props.letterState[1](event.target.value || undefined)\n            }}\n          />\n        </td>\n        <td>\n          <RenderedText text={props.text} />\n        </td>\n      </label>\n    </tr>\n  )\n}\n","import React from 'react'\nimport { createStyle, theme } from '../../utils/style'\nimport { FaCheck } from 'react-icons/fa'\nimport Button from '../Util/Button'\nimport { statePair } from '../../utils/types'\nimport { Answer } from '../App'\nimport { Question } from '../../utils/database'\n\nconst controlsDiv = createStyle({\n  display: 'flex',\n  flex: 1,\n  justifyContent: 'flex-end',\n  fontSize: '9.5pt',\n  verticalAlign: 'middle',\n  gap: '10px',\n  paddingBlock: '10px'\n})\n\nconst labelStyle = createStyle({ display: 'flex', alignItems: 'center' })\n\nconst iconStyle = createStyle({\n  color: theme.timerGreen\n})\n\ninterface BottomControlsProps {\n  currentQuestion: Question\n  tmpAnswerState: statePair<Answer['letter']>\n  tmpFlaggedState: statePair<boolean>\n  updateAnswer: (updatedAnswer: Answer) => void\n}\nexport default function BottomControls(props: BottomControlsProps) {\n  const [flagged, setFlagged] = props.tmpFlaggedState\n\n  if (!props.currentQuestion) return <div style={controlsDiv} />\n\n  return (\n    <div style={controlsDiv}>\n      <label style={labelStyle}>\n        <input\n          type=\"checkbox\"\n          checked={flagged}\n          onChange={() => {\n            setFlagged(!flagged)\n          }}\n        />\n        <span>Da rivedere</span>\n      </label>\n      <Button\n        label=\"Conferma e vai alla successiva\"\n        leftIcon={() => <FaCheck style={iconStyle} />}\n        onClick={() => {\n          props.updateAnswer({\n            id: props.currentQuestion.id,\n            sub: props.currentQuestion.sub,\n            letter: props.tmpAnswerState[0],\n            flagged\n          })\n        }}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Question } from '../../utils/database'\nimport { createStyle, theme } from '../../utils/style'\nimport { Answer } from '../App'\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io'\nimport Button from '../Util/Button'\n\nconst containerStyle = createStyle({\n  display: 'flex',\n  justifyContent: 'space-between'\n})\n\nconst leftContainer = createStyle({\n  display: 'flex'\n})\n\nconst rightContainer = createStyle({\n  display: 'flex',\n  padding: '1em',\n  gap: '5px'\n})\n\nconst pStyle = createStyle({\n  textAlign: 'left',\n  fontSize: '11pt',\n  minWidth: '4em',\n  padding: '7.5px'\n})\n\nconst questionStyle = createStyle(pStyle, {\n  fontWeight: 'bold',\n  width: '7.1em',\n  paddingLeft: 0\n})\n\nconst answerLetterStyle = createStyle(pStyle, {\n  textAlign: 'center',\n  marginInline: '5px',\n  boxShadow: theme.boxShadow\n})\n\nconst iconStyle = createStyle({\n  height: '17.5px',\n  width: '17.5px',\n  color: theme.primary\n})\n\nconst buttonStyle = createStyle({\n  paddingBlock: 0\n})\n\ninterface QuestionHeaderProps {\n  currentAnswer: Answer\n  questionIndex: number\n  sectionQuestions: Question[]\n  shiftQuestionIndex: (offset: number) => void\n}\nexport default function QuestionHeader(props: QuestionHeaderProps) {\n  return (\n    <div style={containerStyle}>\n      <div style={leftContainer}>\n        <p style={questionStyle}>Domanda {props.questionIndex + 1}</p>\n        <p\n          style={{\n            ...answerLetterStyle,\n            backgroundColor: props.currentAnswer?.flagged\n              ? theme.questionYellow\n              : props.currentAnswer?.letter\n              ? theme.questionGreen\n              : 'inherit'\n          }}\n        >\n          {(props.currentAnswer?.letter?.toUpperCase() || '') +\n            (props.currentAnswer?.flagged ? '?' : '') || ' '}\n        </p>\n        <p style={pStyle}>\n          Risposta {props.currentAnswer?.letter ? '' : 'non '}data\n        </p>\n      </div>\n      <div style={rightContainer}>\n        <Button\n          label=\"precedente\"\n          onClick={() => props.shiftQuestionIndex(-1)}\n          style={buttonStyle}\n          leftIcon={() => <IoMdArrowRoundBack style={iconStyle} />}\n        />\n        <Button\n          label=\"successiva\"\n          onClick={() => props.shiftQuestionIndex(1)}\n          style={buttonStyle}\n          rightIcon={() => <IoMdArrowRoundForward style={iconStyle} />}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { createStyle } from '../../utils/style'\nimport GeneralPurposeCollapsible from './GeneralPurposeCollapsible'\n\nconst pStyle = createStyle({\n  margin: '2px',\n  padding: '10px',\n  textAlign: 'justify'\n})\n\nconst innerPStyle = createStyle({ padding: '1px', margin: 0 })\n\ninterface CollapsibleTextProps {\n  label: string\n  longText: string\n  startOpen?: boolean\n}\nexport default function CollapsibleText(props: CollapsibleTextProps) {\n  return (\n    <GeneralPurposeCollapsible label={props.label} startOpen={props.startOpen}>\n      <div style={pStyle}>\n        {props.longText\n          .trim()\n          .split('\\n')\n          .map((t, i) => (\n            <p style={innerPStyle} key={i}>\n              {t}\n            </p>\n          ))}\n      </div>\n    </GeneralPurposeCollapsible>\n  )\n}\n","import React from 'react'\nimport { getImageURL, Question } from '../../utils/database'\nimport { createStyle } from '../../utils/style'\nimport CollapsibleText from '../Util/CollapsibleText'\nimport GeneralPurposeCollapsible from '../Util/GeneralPurposeCollapsible'\nimport RenderedText from '../Util/RenderedText'\n\nconst containerStyle = createStyle({\n  marginBlock: 0,\n  display: 'flex',\n  flexDirection: 'column'\n})\n\nconst collapsibleContentStyle = createStyle({\n  padding: '10px',\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '15px'\n})\n\nconst attachmentStyle = createStyle({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '5px'\n})\n\nconst imageStyle = createStyle({\n  maxHeight: '500px',\n  width: 'fit-content'\n})\n\ninterface QuestionViewProps {\n  question: Question\n}\n\nexport default function QuestionView({ question }: QuestionViewProps) {\n  if (!question)\n    return <span style={containerStyle}>No question to display ¯\\_(ツ)_/¯</span>\n\n  return (\n    <div style={{ marginBottom: question.attachments?.length ? 0 : '15px' }}>\n      {question.track && (\n        <CollapsibleText\n          label=\"mostra/nascondi brano\"\n          longText={question.track}\n        />\n      )}\n      <div style={containerStyle}>\n        <RenderedText text={question.text}></RenderedText>\n\n        {question.attachments?.length && (\n          <GeneralPurposeCollapsible\n            label=\"mostra/nascondi allegati\"\n            contentStyle={collapsibleContentStyle}\n          >\n            {question.attachments.map((fileName, index) => (\n              <span key={index + 1} style={attachmentStyle}>\n                <p style={containerStyle}>Allegato {index + 1}:</p>\n                <img src={getImageURL(fileName)} style={imageStyle} />\n              </span>\n            ))}\n          </GeneralPurposeCollapsible>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { answerLetter, section, QuestionsData } from '../../utils/database'\nimport { createStyle, theme } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { AnswersData } from '../App'\n\nconst defaultBorder = 'thin solid #606060'\n\nconst barStyle = createStyle({\n  display: 'flex',\n  fontSize: '9.5pt',\n  textDecoration: 'none',\n  color: theme.primary\n})\n\ninterface RecapBarProps {\n  active: boolean\n  currentQuestionIndexState: statePair<number>\n  sectionAnswers: AnswersData[section]\n  sectionQuestions: QuestionsData[section]\n}\nexport default function RecapBar(props: RecapBarProps) {\n  return (\n    <a style={barStyle} {...(props.active ? { href: '#' } : {})}>\n      {props.sectionQuestions.map((q, i) => {\n        const answer = props.sectionAnswers.find(\n          (a) => a && a.id == q.id && (q.sub ? q.sub == a.sub : true)\n        )\n        return (\n          <AnswerCell\n            key={i}\n            index={i}\n            letter={answer?.letter}\n            flagged={answer?.flagged || false}\n            onClick={() => {\n              if (props.active) props.currentQuestionIndexState[1](i)\n            }}\n            selected={props.active && props.currentQuestionIndexState[0] == i}\n          />\n        )\n      })}\n    </a>\n  )\n}\n\nconst cellContainerStyle = createStyle({\n  display: 'flex',\n  flexShrink: 1,\n  flexDirection: 'column',\n  alignContent: 'baseline',\n  textAlign: 'center',\n  width: '4em'\n})\n\nconst cellSubStyle = createStyle({\n  padding: '0.3em',\n  height: '1.2em',\n  boxShadow: theme.boxShadow\n})\n\nconst selectedCell = createStyle({\n  outline: `5px solid ${theme.primary}`,\n  marginInline: '4px',\n  color: 'black'\n})\n\nconst pStyle = createStyle({\n  margin: 'auto'\n})\n\ninterface AnswerCellProps {\n  index: number\n  letter: answerLetter | undefined\n  flagged: boolean\n  onClick: () => void\n  selected: boolean\n}\nfunction AnswerCell(props: AnswerCellProps) {\n  return (\n    <div\n      style={{\n        ...cellContainerStyle,\n        backgroundColor: theme.lightBackground,\n        ...(props.selected ? selectedCell : {})\n      }}\n      onClick={props.onClick}\n    >\n      <div\n        style={{\n          ...cellSubStyle,\n          borderBottom: defaultBorder,\n          ...(props.selected ? { fontWeight: 'bold' } : {})\n        }}\n      >\n        <p style={pStyle}>{props.index + 1}</p>\n      </div>\n      <div\n        style={{\n          ...cellSubStyle,\n          backgroundColor: props.flagged\n            ? theme.questionYellow\n            : props.letter\n            ? theme.questionGreen\n            : 'white'\n        }}\n      >\n        <p style={pStyle}>\n          {props.letter?.toUpperCase() || ' '}\n          {props.flagged && '?'}\n        </p>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { sectionInfo } from '../../utils/constants'\nimport { QuestionsData, section } from '../../utils/database'\nimport { createStyle, formatNumber } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\n\nconst baseStyle = createStyle({\n  display: 'flex',\n  paddingTop: '10px',\n  paddingBottom: '20px',\n  alignItems: 'center',\n  flexDirection: 'column'\n})\n\ninterface SectionRecapProps {\n  goToNextSection: () => void\n  section: section\n  sectionAnswers: AnswersData[section]\n  sectionQuestions: QuestionsData[section]\n  secondsUsed: number\n}\nexport default function SectionRecap(props: SectionRecapProps) {\n  const info = sectionInfo[props.section]\n\n  return (\n    <div style={baseStyle}>\n      <p>\n        Sezione conclusa: {info.name}\n        <br />-{' '}\n        {formatNumber(\n          props.sectionAnswers.reduce(\n            (acc, curr) => (curr.letter ? acc + 1 : acc),\n            0\n          )\n        )}{' '}\n        / {formatNumber(props.sectionQuestions.length)} risposte date\n        <br />- Tempo utilizzato:{' '}\n        {Math.floor((props.secondsUsed / 60) % 60).toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}\n        :\n        {Math.floor(props.secondsUsed / 60).toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}\n        :\n        {(props.secondsUsed % 60).toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}{' '}\n        / {Math.floor(info.minutes / 60)}:{info.minutes % 60}:00 (\n        {Math.floor(\n          (info.minutes * 60 - props.secondsUsed) / 60 / 60\n        ).toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}\n        :\n        {Math.floor(\n          ((info.minutes * 60 - props.secondsUsed) / 60) % 60\n        ).toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}\n        :\n        {((info.minutes * 60 - props.secondsUsed) % 60).toLocaleString(\n          undefined,\n          {\n            minimumIntegerDigits: 2\n          }\n        )}{' '}\n        rimanente)\n      </p>\n      <Button\n        label={\n          info.order ==\n          Math.max(...Object.values(sectionInfo).map((i) => i.order))\n            ? 'Vedi esito del test'\n            : 'Prossima sezione'\n        }\n        onClick={props.goToNextSection}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { sectionInfo } from '../../utils/constants'\nimport { section } from '../../utils/database'\nimport { createStyle, formatNumber } from '../../utils/style'\nimport Button from '../Util/Button'\n\nconst baseStyle = createStyle({\n  display: 'flex',\n  paddingTop: '10px',\n  paddingBottom: '20px',\n  alignItems: 'center',\n  flexDirection: 'column'\n})\n\ninterface SectionStartProps {\n  section: section\n  startSection: () => void\n}\nexport default function SectionStart(props: SectionStartProps) {\n  const info = sectionInfo[props.section]\n\n  return (\n    <div style={baseStyle}>\n      <p>\n        Stai per iniziare: {info.name}\n        <br />-{' '}\n        {props.section == 'com'\n          ? `${formatNumber(info.sample)} bran${info.sample > 1 ? 'i' : 'o'}, `\n          : ''}\n        {formatNumber(props.section == 'com' ? info.sub || 0 : info.sample)}{' '}\n        domande\n        <br />- {formatNumber(info.minutes)} minuti\n        <br />- Peso sezione:{' '}\n        {typeof info.coeff == 'number'\n          ? formatNumber(info.coeff)\n          : info.coeff.toFraction()}\n      </p>\n      <Button label=\"Inzia sezione\" onClick={props.startSection} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { createStyle, theme } from '../../utils/style'\nimport { FiClock } from 'react-icons/fi'\n\nconst alertThreshold = 60\n\nconst containerStyle = createStyle({\n  color: theme.timerGreen,\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  gap: '5px'\n})\n\nconst numbersStyle = createStyle({\n  display: 'flex',\n  fontWeight: 'bold',\n  color: 'inherit',\n  border: '2px solid',\n  borderRadius: '4px',\n  height: '1.75em',\n  fontSize: '1.25em',\n  alignItems: 'center',\n  paddingInline: '10px'\n})\n\nconst expiring = createStyle({\n  color: theme.timerRed\n})\n\nconst iconStyle = createStyle({\n  color: 'inherit',\n  height: '2.5em',\n  width: 'auto'\n})\n\nconst pStyle = createStyle({\n  display: 'flex',\n  fontSize: '0.75em',\n  maxWidth: '12em',\n  textAlign: 'left',\n  wordWrap: 'normal'\n})\n\ninterface TimerProps {\n  timer: TimerResult\n  expired: boolean\n}\nexport default function Timer(props: TimerProps) {\n  const { timer } = props\n\n  return (\n    <div\n      style={{\n        ...containerStyle,\n        ...((timer.hours * 60 + timer.minutes) * 60 + timer.seconds <\n          alertThreshold &&\n        !(timer.hours + timer.minutes + timer.seconds == 0 && !props.expired)\n          ? expiring\n          : {})\n      }}\n    >\n      <FiClock style={iconStyle} />\n      <div style={numbersStyle}>\n        {timer.hours.toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}\n        :\n        {timer.minutes.toLocaleString(undefined, {\n          minimumIntegerDigits: 2\n        })}\n        :{timer.seconds.toLocaleString(undefined, { minimumIntegerDigits: 2 })}\n      </div>\n      <p style={pStyle}>\n        Tempo rimanente\n        <br /> per la sezione corrente\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { TimerResult } from 'react-timer-hook'\nimport { getSectionName } from '../../utils/constants'\nimport { section, QuestionsData } from '../../utils/database'\nimport { createStyle } from '../../utils/style'\nimport { AnswersData } from '../App'\nimport Button from '../Util/Button'\nimport Timer from './Timer'\n\nconst outerDiv = createStyle({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between'\n})\n\nconst innerDiv = createStyle({\n  display: 'flex',\n  alignItems: 'baseline',\n  flexDirection: 'row',\n  gap: '15px',\n  fontSize: '11pt'\n})\n\ninterface TopControlsProps {\n  active: boolean\n  answers: AnswersData\n  closeSection: () => void\n  currentSection: section\n  timer: TimerResult\n  timerExpired: boolean\n  questions: QuestionsData\n}\n\nexport default function TopControls(props: TopControlsProps) {\n  const { currentSection } = props\n\n  return (\n    <div style={outerDiv}>\n      <div style={innerDiv}>\n        <div>\n          <p>\n            Sezione: <b>{getSectionName(currentSection)}</b> <br />\n            Riposte: {props.answers[currentSection].length} /{' '}\n            {props.questions[currentSection].length} (\n            {props.answers[currentSection].reduce(\n              (acc, curr) => acc + (curr.flagged ? 1 : 0),\n              0\n            )}{' '}\n            da rivedere)\n          </p>\n        </div>\n        {props.active && (\n          <Button label=\"Chiudi sezione\" onClick={props.closeSection} />\n        )}\n      </div>\n      <Timer timer={props.timer} expired={props.timerExpired} />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useTimer } from 'react-timer-hook'\nimport { getNextSection, sectionInfo } from '../../utils/constants'\nimport { section, QuestionsData } from '../../utils/database'\nimport { createStyle } from '../../utils/style'\nimport { statePair } from '../../utils/types'\nimport { Answer, AnswersData, TimeRecord, view } from '../App'\nimport AnswerForm from './AnswerForm'\nimport BottomControls from './BottomControls'\nimport QuestionHeader from './QuestionHeader'\nimport QuestionView from './QuestionView'\nimport RecapBar from './RecapBar'\nimport SectionRecap from './SectionRecap'\nimport SectionStart from './SectionStart'\nimport TopControls from './TopControls'\n\nconst testingStyle = createStyle({ display: 'flex', flexDirection: 'column' })\n\ninterface QuestionsFormProps {\n  answersState: statePair<AnswersData>\n  questions: QuestionsData\n  sectionState: statePair<section>\n  timeRecordState: statePair<TimeRecord>\n  viewState: statePair<view>\n}\nexport default function QuestionsForm(props: QuestionsFormProps) {\n  const [qIndex, originalSetQIndex] = useState(0),\n    tmpFlaggedState = useState(false),\n    tmpAnswerState = useState<Answer['letter']>(),\n    tmpTimerExpiredState = useState(false),\n    alertDisplayedState = useState(false)\n\n  const [currentSection, setSection] = props.sectionState,\n    [view, setView] = props.viewState,\n    [answers, setAnswers] = props.answersState,\n    [timeRecord, setTimeRecord] = props.timeRecordState\n\n  const sectionQuestions = props.questions[props.sectionState[0]],\n    currentQuestion = sectionQuestions[qIndex],\n    currentAnswer = answers[currentSection][qIndex],\n    shouldShowAlert =\n      !alertDisplayedState[0] &&\n      (tmpAnswerState[0] != currentAnswer?.letter ||\n        tmpFlaggedState[0] != (currentAnswer?.flagged || false))\n\n  const showAlert = () => {\n    alert(\n      `Se prima non premi \"Conferma e vai alla successiva\" la risposta non verrà salvata.`\n    )\n    alertDisplayedState[1](true)\n  }\n\n  const closeSection = () => {\n    if (shouldShowAlert) return showAlert()\n    // else it's already reset by setQIndex\n\n    setView('TOL-secRecap')\n    setQIndex(0)\n    tmpAnswerState[1](undefined)\n    tmpFlaggedState[1](false)\n\n    const nextAnswers = answers\n    nextAnswers[currentSection] = nextAnswers[currentSection].map((a) => ({\n      ...a,\n      flagged: false\n    }))\n    setAnswers(nextAnswers)\n\n    const nextTR = timeRecord\n    nextTR[currentSection] =\n      sectionInfo[currentSection].minutes * 60 -\n      ((timer.hours * 60 + timer.minutes) * 60 + timer.seconds)\n    setTimeRecord(nextTR)\n\n    timer.restart(new Date(), false)\n  }\n\n  const setQIndex = (\n    index: React.SetStateAction<number>,\n    ignoreAlert = false\n  ) => {\n    if (shouldShowAlert && !ignoreAlert) {\n      showAlert()\n    } else {\n      const next = answers[currentSection][index as number]\n\n      tmpFlaggedState[1](next?.flagged || false)\n      tmpAnswerState[1](next?.letter || undefined)\n      alertDisplayedState[1](false)\n\n      originalSetQIndex(index)\n    }\n  }\n\n  const shiftQIndex = (offset: number, ignoreAlert = false) => {\n    const next =\n      (qIndex + offset + sectionQuestions.length) % sectionQuestions.length || 0\n    return setQIndex(next, ignoreAlert)\n  }\n\n  const timer = useTimer({\n    expiryTimestamp: getTimerExpDate(sectionInfo[currentSection].minutes),\n    autoStart: false,\n    onExpire: () => {\n      closeSection()\n      tmpTimerExpiredState[1](true)\n    }\n  })\n\n  const currentQuestionIndexState: statePair<number> = [qIndex, setQIndex]\n  if (!props.questions) return <span>Loading...</span>\n\n  const getViewElement = () => {\n    if (view == 'TOL-startSec')\n      return (\n        <SectionStart\n          section={currentSection}\n          startSection={() => {\n            setView('TOL-testing')\n            timer.start()\n          }}\n        />\n      )\n    else if (view == 'TOL-testing')\n      return (\n        <div style={testingStyle}>\n          <QuestionHeader\n            currentAnswer={currentAnswer}\n            questionIndex={qIndex}\n            shiftQuestionIndex={shiftQIndex}\n            sectionQuestions={sectionQuestions}\n          />\n          <QuestionView question={currentQuestion} />\n          <AnswerForm\n            currentAnswer={currentAnswer}\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n          />\n          <BottomControls\n            currentQuestion={currentQuestion}\n            tmpAnswerState={tmpAnswerState}\n            tmpFlaggedState={tmpFlaggedState}\n            updateAnswer={(a) => {\n              const next = answers\n              next[currentSection][qIndex] = a\n              setAnswers(next)\n              shiftQIndex(1, true)\n            }}\n          />\n        </div>\n      )\n    else if (view == 'TOL-secRecap')\n      return (\n        <SectionRecap\n          goToNextSection={() => {\n            const nextSection = getNextSection(currentSection)\n            if (nextSection) {\n              setSection(nextSection)\n              timer.restart(\n                getTimerExpDate(sectionInfo[nextSection].minutes),\n                false\n              )\n              tmpTimerExpiredState[1](false)\n              setView('TOL-startSec')\n            } else {\n              setView('INFO-end')\n            }\n          }}\n          section={currentSection}\n          secondsUsed={timeRecord[currentSection] || 0}\n          sectionAnswers={answers[currentSection]}\n          sectionQuestions={props.questions[currentSection]}\n        />\n      )\n    else return <div />\n  }\n\n  return (\n    <div>\n      <TopControls\n        active={view == 'TOL-testing'}\n        answers={answers}\n        closeSection={closeSection}\n        currentSection={currentSection}\n        questions={props.questions}\n        timer={timer}\n        timerExpired={tmpTimerExpiredState[0]}\n      />\n      <RecapBar\n        active={view == 'TOL-testing'}\n        currentQuestionIndexState={currentQuestionIndexState}\n        sectionAnswers={answers[currentSection]}\n        sectionQuestions={sectionQuestions}\n      />\n      {getViewElement()}\n    </div>\n  )\n}\n\nfunction getTimerExpDate(minutes: number) {\n  const res = new Date()\n  res.setSeconds(res.getSeconds() + minutes * 60)\n  return res\n}\n","import React from 'react'\nimport { createStyle, theme } from '../../utils/style'\n\nconst divStyle = createStyle({\n  height: '15px',\n  backgroundColor: theme.primary\n})\nconst textStyle = createStyle({\n  color: 'white',\n  margin: 'auto .5em',\n  fontSize: '9.5pt'\n})\n\ninterface SeparatorProps {\n  text?: string\n}\nexport default function Separator(props: SeparatorProps) {\n  return (\n    <div style={divStyle}>\n      <p style={textStyle}>{props.text || ''}</p>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  answerLetter,\n  section,\n  Database,\n  QuestionsData,\n  readDatabase,\n  selectRandomQuestions\n} from '../utils/database'\nimport DBPreview from './DBPreview'\nimport ErrorView from './ErrorView'\nimport Footer from './Footer'\nimport Header from './Header'\nimport InfoView from './InfoView/InfoView'\nimport QuestionsForm from './QuestionsForm/QuestionsForm'\nimport Separator from './Util/Separator'\n\nexport type view =\n  | 'dbPreview'\n  | 'INFO-start'\n  | 'TOL-startSec'\n  | 'TOL-testing'\n  | 'TOL-secRecap'\n  | 'INFO-end'\n\nexport interface Answer {\n  id: string\n  sub?: string\n  letter: answerLetter | undefined\n  flagged: boolean\n}\n\nexport type AnswersData = Record<section, Answer[]>\n\nexport type TimeRecord = Partial<Record<section, number>>\n\nexport default function App() {\n  const [database, loadDatabase] = useState<Database>()\n  const [questions, setQuestions] = useState<QuestionsData>()\n  const [view, setView] = useState<view>('INFO-start')\n  const sectionState = useState<section>('ing')\n  const answersState = useState<AnswersData>({\n    ing: [],\n    mat: [],\n    com: [],\n    fis: []\n  })\n  const timeRecordState = useState<TimeRecord>({})\n  const [loadingError, showError] = useState<[string, Error] | []>([])\n\n  useEffect(() => {\n    if (!database)\n      readDatabase()\n        .then((db) => {\n          loadDatabase(db)\n          setQuestions(selectRandomQuestions(db))\n        })\n        .catch((e) => {\n          showError([\n            'There has been an issue while fetching the database data. Please retry later.',\n            e\n          ])\n        })\n  })\n\n  return (\n    <div>\n      <Header viewState={[view, setView]} />\n      <Separator />\n      <div style={{ paddingInline: '7.5px' }}>\n        <ErrorView\n          hidden={!loadingError[0]}\n          display={loadingError[0] || ''}\n          internal={loadingError[1]}\n        />\n        {view == 'dbPreview' && database ? (\n          <DBPreview db={database} />\n        ) : view.startsWith('TOL') && questions ? (\n          <QuestionsForm\n            answersState={answersState}\n            questions={questions as QuestionsData}\n            sectionState={sectionState}\n            timeRecordState={timeRecordState}\n            viewState={[view, setView]}\n          />\n        ) : view.startsWith('INFO') && questions ? (\n          <InfoView\n            answers={answersState[0]}\n            questions={questions}\n            viewState={[view, setView]}\n          />\n        ) : undefined}\n      </div>\n      <Separator />\n      <Footer />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}